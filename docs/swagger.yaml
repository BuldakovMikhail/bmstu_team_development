basePath: /
definitions:
  handlers.CategoriesResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/handlers.CategoryResponse'
        type: array
    type: object
  handlers.CategoryBody:
    properties:
      name:
        type: string
    type: object
  handlers.CategoryResponse:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  handlers.Pagination:
    properties:
      page_index:
        type: integer
      records_per_page:
        type: integer
    type: object
  handlers.TaskRequest:
    properties:
      category_ids:
        items:
          type: string
        type: array
      description:
        type: string
      title:
        type: string
    type: object
  handlers.TaskResponse:
    properties:
      categories:
        items:
          $ref: '#/definitions/handlers.CategoryResponse'
        type: array
      description:
        type: string
      id:
        type: string
      is_done:
        type: boolean
      title:
        type: string
    type: object
  handlers.TaskShortResponse:
    properties:
      id:
        type: string
      is_done:
        type: boolean
      title:
        type: string
    type: object
  handlers.TasksList:
    properties:
      list:
        items:
          $ref: '#/definitions/handlers.TaskShortResponse'
        type: array
    type: object
  handlers.Token:
    properties:
      token:
        type: string
    type: object
  handlers.UserInfo:
    properties:
      name:
        type: string
      password:
        type: string
    type: object
  response.Response:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for todo list
  title: Plan&Do API
  version: "1.0"
paths:
  /api/v1/category:
    post:
      consumes:
      - application/json
      description: Создание новой категории задачи
      operationId: create-category
      parameters:
      - description: category name
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.CategoryBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateCategory
      tags:
      - category
  /api/v1/category/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление категории задачи, при удалении категория пропадет для
        всех задач
      operationId: delete-category
      parameters:
      - description: Category ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteCategory
      tags:
      - category
  /api/v1/category/all:
    post:
      consumes:
      - application/json
      description: Получить список всех категорий
      operationId: get-categories
      parameters:
      - description: pagination info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.Pagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.CategoriesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetCategories
      tags:
      - category
  /api/v1/sign-in:
    post:
      consumes:
      - application/json
      description: Войти в систему
      operationId: sign-in
      parameters:
      - description: user's name and password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      summary: SignIn
      tags:
      - user
  /api/v1/sign-up:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя
      operationId: sign-up
      parameters:
      - description: user's name and password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      summary: SignUp
      tags:
      - user
  /api/v1/task:
    post:
      consumes:
      - application/json
      description: Создать новую задачу
      operationId: create-task
      parameters:
      - description: task info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: CreateTask
      tags:
      - task
  /api/v1/task/{id}:
    delete:
      consumes:
      - application/json
      description: Удалить задачу по переданному id
      operationId: delete-task
      parameters:
      - description: Task ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: DeleteTask
      tags:
      - task
    get:
      consumes:
      - application/json
      description: Получить полное описание задачи по переданному id
      operationId: get-task
      parameters:
      - description: Task ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetTask
      tags:
      - task
    patch:
      consumes:
      - application/json
      description: Изменить задачу по указанному id
      operationId: edit-task
      parameters:
      - description: task info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskRequest'
      - description: Task ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: EditTask
      tags:
      - task
  /api/v1/task/{id}/readiness:
    post:
      consumes:
      - application/json
      description: Изменить статус готовности задачи. Если задача была готова, то
        станет неготовой или наоборот.
      operationId: toggle-readiness-task
      parameters:
      - description: Task ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: ToggleReadinessTask
      tags:
      - task
  /api/v1/task/all:
    post:
      consumes:
      - application/json
      description: Получить список коротких описаний задач
      operationId: get-all-tasks
      parameters:
      - description: pagination info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.Pagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TasksList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: GetAllTasks
      tags:
      - task
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
